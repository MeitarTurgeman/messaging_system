pipeline {
    agent any

    environment {
        DOCKER_USER = "meitarturgeman"
        FLASK_CONTAINER_NAME = "flask-app"
        FLASK_IMAGE_NAME = "meitarturgeman/messages-api:latest"
        DOCKER_REGISTRY = "docker.io"
        KUBECONFIG = "/var/jenkins_home/.kube/config"
    }

    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }

        stage('Build Flask Docker Image') {
            steps {
                script {
                    sh "docker build -t ${FLASK_IMAGE_NAME} ."
                }
            }
        }
        
        stage('Deploy Flask Locally') {
            steps {
                script {
                    sh """
                    docker stop ${FLASK_CONTAINER_NAME} || true
                    docker rm ${FLASK_CONTAINER_NAME} || true
                    docker run -d --name ${FLASK_CONTAINER_NAME} -p 5000:5000 ${FLASK_IMAGE_NAME}
                    """
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                    # Ensure directories exist
                    mkdir -p /var/jenkins_home/.kube
                    mkdir -p /var/jenkins_home/.minikube/profiles/minikube

                    # Verify certificates exist
                    if [ ! -f "/var/jenkins_home/.minikube/ca.crt" ] || [ ! -f "/var/jenkins_home/.minikube/profiles/minikube/client.crt" ] || [ ! -f "/var/jenkins_home/.minikube/profiles/minikube/client.key" ]; then
                        echo "Error: Missing required certificates"
                        ls -la /var/jenkins_home/.minikube/
                        ls -la /var/jenkins_home/.minikube/profiles/minikube/ || true
                        exit 1
                    fi
                    
                    # Set up kubeconfig
                    kubectl config set-cluster minikube --server=https://192.168.49.2:8443 --certificate-authority=/var/jenkins_home/.minikube/ca.crt
                    kubectl config set-credentials minikube --client-certificate=/var/jenkins_home/.minikube/profiles/minikube/client.crt --client-key=/var/jenkins_home/.minikube/profiles/minikube/client.key
                    kubectl config set-context minikube --cluster=minikube --user=minikube
                    kubectl config use-context minikube
                    """
                }
            }
        }
    }
}
